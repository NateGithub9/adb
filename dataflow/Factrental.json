{
	"name": "Factrental",
	"properties": {
		"folder": {
			"name": "OLD"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "rental"
				},
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "inventory"
				},
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "payment"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "Factrental"
				}
			],
			"transformations": [
				{
					"name": "rentalinventory"
				},
				{
					"name": "paymentrentalinventory"
				},
				{
					"name": "select"
				}
			],
			"scriptLines": [
				"source(output(",
				"          rental_id as integer,",
				"          rental_date as timestamp,",
				"          inventory_id as integer,",
				"          customer_id as integer,",
				"          return_date as timestamp,",
				"          staff_id as integer,",
				"          last_update as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'rental',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> rental",
				"source(output(",
				"          inventory_id as integer,",
				"          film_id as integer,",
				"          store_id as integer,",
				"          last_update as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'inventory',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> inventory",
				"source(output(",
				"          payment_id as integer,",
				"          customer_id as integer,",
				"          staff_id as integer,",
				"          rental_id as integer,",
				"          amount as decimal(5,2),",
				"          payment_date as timestamp,",
				"          last_update as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'payment',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> payment",
				"rental, inventory join(rental@inventory_id == inventory@inventory_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> rentalinventory",
				"payment, rentalinventory join(payment@rental_id == rental@rental_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> paymentrentalinventory",
				"paymentrentalinventory select(mapColumn(",
				"          payment_id,",
				"          customer_id = payment@customer_id,",
				"          staff_id = payment@staff_id,",
				"          rental_id = rental@rental_id,",
				"          inventory_id = inventory@inventory_id,",
				"          film_id,",
				"          store_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          row_id as integer,",
				"          BK_inventory as integer,",
				"          BK_rental as integer,",
				"          BK_payment as integer,",
				"          total_payment as decimal(15,2),",
				"          datekey_rental as integer,",
				"          datekey_return as integer,",
				"          datekey_payment as integer,",
				"          SK_customer as integer,",
				"          SK_staff as integer,",
				"          SK_store as integer,",
				"          SK_film as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> Factrental"
			]
		}
	}
}